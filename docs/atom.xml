<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>isekiのNote</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.iseki.space/"/>
  <updated>2019-11-01T13:36:26.008Z</updated>
  <id>https://blog.iseki.space/</id>
  
  <author>
    <name>iseki</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的 PGP Key</title>
    <link href="https://blog.iseki.space/2019/11/01/pgpkey/"/>
    <id>https://blog.iseki.space/2019/11/01/pgpkey/</id>
    <published>2019-11-01T21:00:00.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的-PGP-Key-更换了"><a href="#我的-PGP-Key-更换了" class="headerlink" title="我的 PGP Key 更换了"></a>我的 PGP Key 更换了</h1><p>因为一些意外，Key私钥无法访问，备份全部丢失，现在使用新 Key：</p><p><a href="https://peegeepee.com/06E036559B4FF61E6338F1EC8CC8C8A305E78F3C" target="_blank" rel="noopener">06E0 3655 9B4F F61E 6338 F1EC 8CC8 C8A3 05E7 8F3C</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line">Comment: iseki &lt;admin@iseki.space&gt;</span><br><span class="line">Comment: 2019/11/1 21:16</span><br><span class="line">Comment: 4096 bit RSA</span><br><span class="line">Comment: 06E036559B4FF61E6338F1EC8CC8C8A305E78F3C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mQINBF28MBMBEACvmxf5PIRjJzXnLsxWlok0/EpJ4cJ/YAX5DH3kpl+YazEuyuI0</span><br><span class="line">DX6QrBBWU0awhJ1myk99E1OUQ/JU8IvsDMd90JpNpsQ0teeGCaMHD3Q1qrvJRJoQ</span><br><span class="line">suMkaKV4LwNabqS0mZAe5BvrX45KfWoKlOr3yySIehfdc6lpCRiItvCLpt35TkGy</span><br><span class="line">qmgQq5UACYs2fE7rx8gDV1xtwK+fCDwmZDTSXHybQ+hpYZt+etIjWH0MVOM2NiOR</span><br><span class="line">ovgaTW20SwI+n1NkcKEx5LYjd07tjila1bYVRLd0CUZyeQKV3I5aGZ2cp5qW6x40</span><br><span class="line">h4/h+gESe5QVgT1XbUacWS9DNvxS0skbMaaQF6IpfecSR6y/SpkCojC0VCs0G94O</span><br><span class="line">JnP8s0FnFLNN4sTozU4dKnpyDgDdv/U7rUSnLhTVpy9E3jhTyKd6qkUIbPlFj3D2</span><br><span class="line">BaOzTZ57EC252hXcyfIIvqS5Y64pFWWXDBdNdJZExpXwqKVpjjSsf731EZnvBdLZ</span><br><span class="line">O4wvCyUw7ku+ZjjrD1FxD0kae1lkC8VSMqYfr6q1k60m5OeaYpMui+4AnprUEgDP</span><br><span class="line">zUCU7CPxn+rrsykuCdzybt1/KRYnkB3aRSgTznvjfZ9c/lEAO+F7viOrK2vZ/8WL</span><br><span class="line">RceH1zj2FAjoNfY4OSR9uw7oeR7MOso2KhSpbQhfFFPzyXHF7/2jNAiihwARAQAB</span><br><span class="line">tBlpc2VraSA8YWRtaW5AaXNla2kuc3BhY2U+iQIwBBMBCgAaBAsJCAcCFQoCFgEC</span><br><span class="line">GQEFgl28MBMCngECmwEACgkQjMjIowXnjzwOXxAAjzaa4fZ0HvYxVBj2Ts5HXhwp</span><br><span class="line">KIOnT9T03qmystsl9bE5ID+yOq47r/+41BG5jUqN6f0vezglN7CkvTyrMnV5cCJ5</span><br><span class="line">TpPFAqXQ5o5kX+jRIiSuEUd+UpZzxt02Q9blM/IbeFOCizOrT2tXS8hTXQBqHQAq</span><br><span class="line">QmKChFyDOh/SgNtqPxjABMD/unxxlCFNbVAhJwPAGG+hjoTAqotOfGTElfR9w0Pj</span><br><span class="line">GHhYR6UDIbhErYq80MVadQSJCf+HH8Kse/28R1GGPVMFzi1mnIYI9gTkTsyVAycR</span><br><span class="line">Nm5qunDgiZ0nCb2cNHav2fa5KjPooftsiyM9bg0AK68iNX0neCenvKW91g/9VXfr</span><br><span class="line">YSQUDwMeHfr6IO7umVDIOLvU0RKkFgGvevqg+UaW3WyseRVx0dgsOlIsyh3RBCTn</span><br><span class="line">RbqOSOpxFihkywERgSxs8XL+yrG7xEs6ZeWl5JiXZePvWbzgIJsnOt/jdXioMQwZ</span><br><span class="line">3M4KthGQmmmP0U3jPEJJO5OqAilJ9kXeVll/LXjy66dtg+8/EnOMhhsNE3V1D/Yl</span><br><span class="line">UdKvjL/ZnsY4ytUd9C6/IyCLkSBO/18kc/70gMrs/XzRt/v8Ow/fduKT5xBJZ/4P</span><br><span class="line">tAaJn+vGGseLKegF0bNzwjXelRJfWtqAEvYG+mwFl8qG/mPHxylnmM546sDVuDy7</span><br><span class="line">tUG3nkcuZQVI6Z9txg25AY0EXbwwEwEMAKgm5GO3WOecEkJGPfzo1R4ncbMQSgK1</span><br><span class="line">mfJDkYK31NZB375cI/jqP9x/EgOkzLbc030uwke38Y3iOc5lMahk3z7N10ETFdOe</span><br><span class="line">kYQaQjwTZX05vG60nSlUSDryP03y1MBAKLh9knAKNiuGPcnyF1cqUPOTI9d86rkh</span><br><span class="line">aqPRrPHN+FK+0uSMTv3U6aluY/JrALCCYpsfs/KFh+Mkm23REtUhrcpR30yPnxGq</span><br><span class="line">l13scmBzsBNENkpoy5on0KQ0qAtq8G37nnzFC9xLo+3oYiaQ7PD4ezLw8dPRhcHZ</span><br><span class="line">i87rzbEqmz0qRQ7/0kETpl/AdgvrTFauSjF5J1OfdMsYFvzCY1uvtN9j+eFc8bBW</span><br><span class="line">IbdTACgsxiUt5nCe35xYpl1P4GZbu6ZyKTD7KLnw44ouVjgME/+L973XcX8np22D</span><br><span class="line">oedpz0qqzKl9o8ro7dQUMwjOyxpuXz6TWTaaX2WrV0L2/gLRlAdzM58Z2pFzxPJU</span><br><span class="line">b7mIXya+vtku9/tjF2o57kv7u6LhSDCTlwARAQABiQO+BBgBCgAJBYJdvDATApsC</span><br><span class="line">AakJEIzIyKMF5488wN2gBBkBCgAGBQJdvDATAAoJEE/NE1KAzVIwzjYMAJG5nxij</span><br><span class="line">EviS2WnmncxltfZV/1Zg5sE/Olk0IZEkoTvuCVS9degrJsvC2VMx+CdJo4MorLph</span><br><span class="line">x9Ih9BVqs3SY5wLpETO0bMUiMeg0RWMDP23cDdO9dMq/7PZm1+mCdkUlRXo5f5W9</span><br><span class="line">CSdH3CIpFhZdwwk1+iswJejGa4U+fwiFJQz3K/rrj3hcZAECOiTj6KOfhdj+4N7q</span><br><span class="line">BngpWTvfUMLwhIUd+LvKOZ8Qy6nt5sBY1YdNuhaY+vrJ0wqAHM323umtbXUQ+ot4</span><br><span class="line">yn6Of8CLYBzUxgX6C6NMTL2RwuzflHO7umnU4PpNpJWMRySsJ10CCrSYakveJsHg</span><br><span class="line">wS+wgxfYVkxD7stcR2peH0NlQWVl3a48u0KqPkvdV8qyANKy6TwtZ2TP0QaNMwjK</span><br><span class="line">pbQc2gcztypfEgUsVg1AWRw3BkpbzC3JBnPI/Qn9+pyhb4GHct97gq496LGUejaK</span><br><span class="line">P5COSQhF92X6uiaNc9LQGwF8N4itqYnKPzqnnMA87nAEi7sKMl2nDdfJjmN6D/97</span><br><span class="line">SftMx0cPEkq6mg25O17TfXRbbLO8AlTdmv8SVrGofT6cDc1EPH6b5Q3phmIy7mB9</span><br><span class="line">I4kraEzyCeNh4DH0+CaI+T2ToUxZp9F+xM+zU+h1TTbSsBFSYqr2KYH3wfxZ277/</span><br><span class="line">CV5wn0l54OeXOff1oT6p2aTvlyg72y026ulKTCjo00oRvz0kKnC+Pdjj9O+hiXwL</span><br><span class="line">MkGSzDltTAUbcnwRqGa3qLSlaegCcFYXTovk75VN8LH4Q0AmxDUF7xOsAFDSxaxM</span><br><span class="line">NiNEAGeeHTaK5UQ269IZYjCCP+IfGt8iSms6kvMWrbmSmNde+l8FMVK1I/ap4zEe</span><br><span class="line">XISpPboGrKYr4YBBdQ6OD+Xwh5cOZsITxrB/H87K6zTPBM/xfrYB80woAAdHiIEv</span><br><span class="line">Zz026iHNLsMVuSE5gMqK3AjmNfbXEncckFn0rpXNOd2HGHtQ3sO1i6C90tuWYROi</span><br><span class="line">xFgYRr2UzvCZNsFDxdW6+w4c9eDr7bZ+5p2koDqHMfWhQ6eVxJGL635cRNBaPCjQ</span><br><span class="line">ab9IafqTg4IA3dm9JtHNOr1mylcn1HixRGbjbdw0E8zgwb2i/j1vfzcMzhVYgcTq</span><br><span class="line">9pEhuBmmsUcDxXOa8fiSjJVLxhUrlhhPW2W3dTJMuCPlHqIX+j5NJN3VTGt3D+Bu</span><br><span class="line">gc1V8hK25MngyySI/6sAR5T4wcFmOMAKR2DKGRnJP7kBjQRdvDATAQwA3ch5/abj</span><br><span class="line">tyg/+6yrFciaS8DNW7C5HGliyqRTZF2Zo+bKNpVgpvRHy8eJrZcXxWfkv6ORjcfH</span><br><span class="line">d/pcKSRTms+n0lNR/koHq1cUcsJ3uVv0A/TKTts/IyK1wzDB53e26SaBsBeWn5/b</span><br><span class="line">7OEUcUN30NAZduB9wpk/jjdWFgKcvwLfP7Rl9UdMkA3C3GCk7Hya8Xz82Jy5d4hA</span><br><span class="line">nshSefP8xxnPAp2Wm5sKziRi0fQzLEGU4OWSc+58ERot2uRPlStRQrUOe+B27kKT</span><br><span class="line">z1Q4Wayl08cKz3fMUYeNEwA9p41IGQ1AR6kglIPtWTHwpQ2lGMP9wY2P08e6bBPf</span><br><span class="line">1HD5dhrRY6PtQxw50Ng1IfFIfrXl46Xtt/xjMomb2C1T7BoCZOV9skJrpTC5LKsM</span><br><span class="line">l2gDWlKNmxCnKx9irbPurhp3CmS0l2B3smrk26uAjU7RfUFctTTuGkNWebr2In1y</span><br><span class="line">wF2iB3IhT0RGYLfn67U/9Lr/xOYcDymw2jsWRijjjaQ7SOjEOZqeHvmPABEBAAGJ</span><br><span class="line">Ah8EGAEKAAkFgl28MBMCmwwACgkQjMjIowXnjzyPRg//fEJqoMv9j7slgMbt4O6M</span><br><span class="line">KGMeC5ga/q/wka188gEWAMBNF+Od6132r/tkKCLA0B2HJz8ObMN1cw8pMO+Tb0W2</span><br><span class="line">TpZuyb9XneFje+SX9DDuuh30DcaQap1QisJDX65/gn8zzq525r6AZ9SdbGesxe5x</span><br><span class="line">tOcQZ/XC10lsLqDZ8wiJ7/iNAUG7xZY+xfYKdngW4vR1I9RDXNNcJkI+WttGMLp4</span><br><span class="line">VaYpyZhai17J3h/51tlXY1H1AXCO8K2v/n/cqF/NcUyV3c+Nbb6h2oyl327WdDIh</span><br><span class="line">7xWP5l1tcMkzcOWnp+pz468ss4n2pQCfaE6u/brVzsxPloM9Vf8HrUT7tN1eG8hM</span><br><span class="line">zBILwrVRFSXUS/fd/Ke0bsaJ6e7AT42r+MhrASH31FuZMgkAaEjGfbD/jxvUGk5w</span><br><span class="line">8YnQO49w9XtFBfnTh/0M5faT0z9/yZZdGpf01xZE8pk/HkqynPAGlZDGF2Fh/27e</span><br><span class="line">yp0uxOQSW5fWC8bppOEICCkWbLhf+67KYgtohEVy6DzYy0C7DcIr5uyhjZjnBDak</span><br><span class="line">TzjQF7jTDZfIVyypVdg5fwJHyPZzDXbN4zHb1ypOigbspT5iWHPevticqImHkVXR</span><br><span class="line">mDmwbMV4IMDqCa6JQjuBZrjvF8LoIf/3O9ahV8Q3pPS0qgeSyrxFdPwewdQPUbdX</span><br><span class="line">kDlbND13Xi2WSKQxlijFU+k=</span><br><span class="line">=1zuD</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br></pre></td></tr></table></figure><p>旧Key已经吊销，以下Key即起不再使用：</p><p>旧 PGP Key: <a href="https://peegeepee.com/39A9DA5A44E924722E832497398E78E8551D5860" target="_blank" rel="noopener">39A9 DA5A 44E9 2472 2E83 2497 398E 78E8 551D 5860</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;我的-PGP-Key-更换了&quot;&gt;&lt;a href=&quot;#我的-PGP-Key-更换了&quot; class=&quot;headerlink&quot; title=&quot;我的 PGP Key 更换了&quot;&gt;&lt;/a&gt;我的 PGP Key 更换了&lt;/h1&gt;&lt;p&gt;因为一些意外，Key私钥无法访问，备份全部丢
      
    
    </summary>
    
    
    
      <category term="pgp" scheme="https://blog.iseki.space/tags/pgp/"/>
    
      <category term="openpgp" scheme="https://blog.iseki.space/tags/openpgp/"/>
    
      <category term="gpg" scheme="https://blog.iseki.space/tags/gpg/"/>
    
  </entry>
  
  <entry>
    <title>话说我大Kotlin怎么连个throttle都没有呢</title>
    <link href="https://blog.iseki.space/2019/10/23/kotlin-throttle/"/>
    <id>https://blog.iseki.space/2019/10/23/kotlin-throttle/</id>
    <published>2019-10-23T15:54:00.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="throttle"><a href="#throttle" class="headerlink" title="throttle"></a>throttle</h1><p>既然没有，就自己写一个糊上去吧。<br>总之，这东西的功能就是给函数调用加一个冷却时间。</p><p>我这里的场景是，bot要根据接收到的消息来源判断自己是否被加入了未经授权的群组，如果出现了这种群组，就发出请求退群。<br>那么问题就来了，在发出的请求完成前bot可能接收到大量来自同一个群组的消息，为了避免发出一堆没用的请求，最简单的办法就是加一个冷却时间。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">throttle</span><span class="params">(threshhold: <span class="type">Long</span>, lambda: () -&gt; <span class="type">Unit</span>)</span></span> = run &#123;</span><br><span class="line">    <span class="keyword">var</span> last = <span class="number">0L</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">val</span> t = System.currentTimeMillis()</span><br><span class="line">        <span class="keyword">if</span> (t - last &gt; threshhold) &#123;</span><br><span class="line">            lambda.invoke()</span><br><span class="line">            last = t</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Unit-test"><a href="#Unit-test" class="headerlink" title="Unit test"></a>Unit test</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UtilKtTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">throttle</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">val</span> t = bot.throttle(<span class="number">200</span>) &#123;</span><br><span class="line">            count++</span><br><span class="line">        &#125;</span><br><span class="line">        repeat(<span class="number">8</span>) &#123; t.invoke() &#125;</span><br><span class="line">        assertEquals(count, <span class="number">1</span>)</span><br><span class="line">        Thread.sleep(<span class="number">500</span>)</span><br><span class="line">        repeat(<span class="number">4</span>) &#123; t.invoke() &#125;</span><br><span class="line">        assertEquals(count, <span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> fn = throttle(<span class="number">200</span>) &#123;</span><br><span class="line">    doSomething()</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">fn.todo() <span class="comment">//每次需要的时候调用下，如果距上次调用小于200ms，就什么也不会发生</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;throttle&quot;&gt;&lt;a href=&quot;#throttle&quot; class=&quot;headerlink&quot; title=&quot;throttle&quot;&gt;&lt;/a&gt;throttle&lt;/h1&gt;&lt;p&gt;既然没有，就自己写一个糊上去吧。&lt;br&gt;总之，这东西的功能就是给函数调用加一个冷却时间。&lt;/
      
    
    </summary>
    
    
    
      <category term="kotlin" scheme="https://blog.iseki.space/tags/kotlin/"/>
    
  </entry>
  
  <entry>
    <title>大佬们实在是太聚聚了，萌新咋活啊😐</title>
    <link href="https://blog.iseki.space/2019/10/18/dalao/"/>
    <id>https://blog.iseki.space/2019/10/18/dalao/</id>
    <published>2019-10-18T09:54:00.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<p>感觉自己完了呢…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;感觉自己完了呢…&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="dalao" scheme="https://blog.iseki.space/tags/dalao/"/>
    
  </entry>
  
  <entry>
    <title>这里是iseki的笔记本呢</title>
    <link href="https://blog.iseki.space/2019/10/17/hello/"/>
    <id>https://blog.iseki.space/2019/10/17/hello/</id>
    <published>2019-10-17T23:30:00.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<p>我也不会写什么blog，那么，这里就当作一个笔记本用吧，毕竟有些东西，好不容易搞明白，忘记了还是很麻烦的呢。<br>要是能借机会帮到其他人，我也是很高兴的呢。</p><p>这里用Hexo驱动，Github 托管 + Cloudflare CDN 外加一份开源的主题，自己凑凑合合写个Github Action workflow（其实没有也无所谓啊），就算差不多能用了。<br>首页的链接嘛，基本都点不开（x</p><p>那么，就先这样了，最后，忘了说一句，既然你来了，那说明咱俩有缘啊（x</p><p>总之，欢迎光临了）x</p><p>满口胡话的iseki</p><p>2019.10.17</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我也不会写什么blog，那么，这里就当作一个笔记本用吧，毕竟有些东西，好不容易搞明白，忘记了还是很麻烦的呢。&lt;br&gt;要是能借机会帮到其他人，我也是很高兴的呢。&lt;/p&gt;
&lt;p&gt;这里用Hexo驱动，Github 托管 + Cloudflare CDN 外加一份开源的主题，自己凑
      
    
    </summary>
    
    
    
      <category term="pin" scheme="https://blog.iseki.space/tags/pin/"/>
    
      <category term="text" scheme="https://blog.iseki.space/tags/text/"/>
    
  </entry>
  
  <entry>
    <title>在GitHub Action里设置 Hexo gen 的折腾笔记</title>
    <link href="https://blog.iseki.space/2019/10/17/github-action-hexo-gen/"/>
    <id>https://blog.iseki.space/2019/10/17/github-action-hexo-gen/</id>
    <published>2019-10-17T22:44:00.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<p>不想阅读Github Action厚重的文档，用预配置好的NPM Action折腾了半天，终以失败告终。由于不熟悉NPM和Node.js，最后爆出的错误摸不到头脑，就此作罢。</p><p>寻找另一个方法，在 <code>https://github.com/user/repo/actions/new</code> 中选择了跳过，自己设置一个空白的Workflow。</p><ol><li><p>为了避免Action重新推送仓库后循环触发Action（不知Github有没有对这种情况进行特殊处理）添加路径过滤器，仅当 <code>/source</code> 目录存在更新时才触发 Workflow</p></li><li><p>在仓库的 <code>Settings-&gt;Deploy keys</code> 里设置Github Action push时使用的SSH公钥，并赋予写权限，<code>Settings-&gt;Secrets</code> 里设置私钥的 Base64 编码。<br>私钥会通过环境变量传入Action的shell，<code>base64 -d</code> 即可解码，base64编码是为了避免潜在的回车换行符问题（环境变量里出现的换行符似乎不能正确地写入文件）</p></li><li><p>【未解决的疑问】 克隆git仓库后的所有操作最好写在一个step里，否则Git的工作目录可能莫名其妙的变空，猜测有可能是因为Step并不是严格的按顺序执行的？（这点没有仔细看文档所以不知道）总之写在一个Step里肯定就没问题了。</p></li><li><p><code>~/.ssh/id_rsa</code> 文件注意设定权限 <code>0600</code> 默认的权限过于宽松，SSH会不读取。</p></li><li><p><code>~/.ssh/config</code> 里需写入 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">    StrictHostKeyChecking no</span><br></pre></td></tr></table></figure></li></ol><p>否则可能会弹出要求确认SSH fingerprint的交互消息。</p><ol start="6"><li>记得设定 <code>git config --global user.name/email</code> 否则无法提交</li><li>如果使用了自定义的域名，注意 <code>CNAME</code> 文件是否在 <code>hexo clean</code> 后被删除，可能需要自己写回去。</li><li>注意部分Hexo主题可能以 git submodule 方式引入， Github Action 克隆仓库时不会自动克隆子模块，导致生成的所有页面空白，Hexo只会给出警告而不是错误。</li></ol><h3 id="附上自己写的workflow（糊成一坨，凑合能用）"><a href="#附上自己写的workflow（糊成一坨，凑合能用）" class="headerlink" title="附上自己写的workflow（糊成一坨，凑合能用）"></a>附上自己写的workflow（糊成一坨，凑合能用）</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Hexo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line"><span class="attr">  push:</span> </span><br><span class="line"><span class="attr">    paths:</span> </span><br><span class="line"><span class="bullet">      -</span> <span class="string">'source/**'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span> </span><br><span class="line"><span class="attr">  build:</span> </span><br><span class="line"><span class="attr">    name:</span> <span class="string">Refresh</span></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Install</span> <span class="string">Node.js</span> <span class="string">and</span> <span class="string">NPM</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          sudo apt-get install curl -y</span></span><br><span class="line"><span class="string">          curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</span></span><br><span class="line"><span class="string">          sudo apt-get install nodejs -y</span></span><br><span class="line"><span class="string">          echo '=====Show NPM version====='</span></span><br><span class="line"><span class="string">          npm -v</span></span><br><span class="line"><span class="string">          echo '=====Show Node.js version====='</span></span><br><span class="line"><span class="string">          node -v</span></span><br><span class="line"><span class="string"></span><span class="attr">      - name:</span> <span class="string">Install</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          sudo npm install -g hexo-cli</span></span><br><span class="line"><span class="string">          echo '=====Show HEXO version====='</span></span><br><span class="line"><span class="string">          hexo -v</span></span><br><span class="line"><span class="string"></span><span class="attr">      - name:</span> <span class="string">Prepare</span> <span class="string">Key</span> <span class="string">and</span> <span class="string">SSH</span> <span class="string">config</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir ~/.ssh</span></span><br><span class="line"><span class="string">          echo $DEPLOY_PRIVKEY | base64 -d &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 0600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          echo 'Host *' &gt;&gt; ~/.ssh/config</span></span><br><span class="line"><span class="string">          echo '    StrictHostKeyChecking no' &gt;&gt; ~/.ssh/config</span></span><br><span class="line"><span class="string">          chmod 0600 ~/.ssh/config</span></span><br><span class="line"><span class="string"></span><span class="attr">        env:</span> </span><br><span class="line"><span class="attr">          DEPLOY_PRIVKEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_PRIVKEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Clone</span> <span class="string">git</span> <span class="string">repo</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd ~</span></span><br><span class="line"><span class="string">          echo '=====Show work path====='</span></span><br><span class="line"><span class="string">          pwd</span></span><br><span class="line"><span class="string">          git clone git@github.com:cpdyj/blog.git</span></span><br><span class="line"><span class="string">          cd blog</span></span><br><span class="line"><span class="string">          ls</span></span><br><span class="line"><span class="string">          echo '=====Show work path====='</span></span><br><span class="line"><span class="string">          pwd</span></span><br><span class="line"><span class="string">          cat ./package.json</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          npm audit fix</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo g</span></span><br><span class="line"><span class="string">          echo "blog.iseki.space" &gt; ./docs/CNAME</span></span><br><span class="line"><span class="string">          git config --global user.name "User name"</span></span><br><span class="line"><span class="string">          git config --global user.email "Email@example.com"</span></span><br><span class="line"><span class="string">          git add docs</span></span><br><span class="line"><span class="string">          git commit -am "Auto generate on Github Action at `date`"</span></span><br><span class="line"><span class="string">          git push</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不想阅读Github Action厚重的文档，用预配置好的NPM Action折腾了半天，终以失败告终。由于不熟悉NPM和Node.js，最后爆出的错误摸不到头脑，就此作罢。&lt;/p&gt;
&lt;p&gt;寻找另一个方法，在 &lt;code&gt;https://github.com/user/re
      
    
    </summary>
    
    
    
      <category term="github" scheme="https://blog.iseki.space/tags/github/"/>
    
      <category term="action" scheme="https://blog.iseki.space/tags/action/"/>
    
      <category term="nodejs" scheme="https://blog.iseki.space/tags/nodejs/"/>
    
      <category term="npm" scheme="https://blog.iseki.space/tags/npm/"/>
    
      <category term="hexo" scheme="https://blog.iseki.space/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于Kotlin注解处理器的一些坑</title>
    <link href="https://blog.iseki.space/2019/10/14/kotlin-kapt-note/"/>
    <id>https://blog.iseki.space/2019/10/14/kotlin-kapt-note/</id>
    <published>2019-10-14T00:34:14.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>kapt 1.3.5 存在bug，不能用，连同 kotlin-gradle-plugin 一同降级到 1.3.41</p></li><li><p><code>build.gradle.kts</code> 中 <code>dependencies</code> 需要同时使用 <code>implementation</code> 和 <code>kapt</code> 引用 <code>com.google.auto.service:auto-service</code> ，否则无法识别使用Kotlin编写的注解处理器</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    implementation(<span class="string">"com.google.auto.service:auto-service:<span class="variable">$googleAutoServiceVersion</span>"</span>)</span><br><span class="line">    kapt(<span class="string">"com.google.auto.service:auto-service:<span class="variable">$googleAutoServiceVersion</span>"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果使用注解的类、函数签名、注解参数等包含顶级包声明的内容，javac可能出现找不到符号异常。不确定是不是bug。由于Windows下jdk可能使用中文locale，idea中Build中文报错可能显示成乱码，可以在Terminal中运行 <code>gradlew build</code> 查看错误原因（Terminal的文字编码是正确的）。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;kapt 1.3.5 存在bug，不能用，连同 kotlin-gradle-plugin 一同降级到 1.3.41&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;build.gradle.kts&lt;/code&gt; 中 &lt;code&gt;dependencies&lt;/c
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.iseki.space/tags/java/"/>
    
      <category term="kotlin" scheme="https://blog.iseki.space/tags/kotlin/"/>
    
      <category term="kapt" scheme="https://blog.iseki.space/tags/kapt/"/>
    
      <category term="idea" scheme="https://blog.iseki.space/tags/idea/"/>
    
      <category term="gradle" scheme="https://blog.iseki.space/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>第一次用ANTLR呢</title>
    <link href="https://blog.iseki.space/2018/09/07/antlr-first/"/>
    <id>https://blog.iseki.space/2018/09/07/antlr-first/</id>
    <published>2018-09-07T22:29:00.000Z</published>
    <updated>2019-11-01T13:36:26.008Z</updated>
    
    <content type="html"><![CDATA[<p>觉得既然是第一次尝试ANTLR嘛，那就来个简单点的，parse Windows 的 hosts 文件吧，结果……</p><p>先上一段 grammar:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">grammar hosts;</span><br><span class="line"></span><br><span class="line">hostfile: line* EOF;</span><br><span class="line">line : item</span><br><span class="line">     | comment</span><br><span class="line">     ;</span><br><span class="line">item: IPADDRESS HOSTNAME ;</span><br><span class="line">comment: COMMENT;</span><br><span class="line">HOSTNAME: [A-z0-9.]+;</span><br><span class="line">IPADDRESS: NUM &apos;.&apos; NUM &apos;.&apos; NUM &apos;.&apos; NUM;</span><br><span class="line">NUM: [0-9] +;</span><br><span class="line">COMMENT: &apos;#&apos; .*? &apos;\r&apos;? &apos;\n&apos;;</span><br><span class="line">NL: (&apos;\r\n&apos;|&apos;\n\r&apos;|&apos;\r&apos;|&apos;\n&apos;) -&gt;skip;</span><br><span class="line">BLANK: (&apos; &apos;|&apos;\t&apos;) -&gt;skip;</span><br></pre></td></tr></table></figure><p>乍一看好像没什么问题，挺好的，然而<code>item</code>那条文法规则就是不起作用，前面注释都正常处理了，结果ip地址出不来。<br>网上搜了半天也搜不到，于是去StackOverflow上找了找，有个现成的。<br><a href="https://stackoverflow.com/questions/29777778/antlr-4-5-mismatched-input-x-expecting-x" target="_blank" rel="noopener">StackOverflow: antlr-4-5-mismatched-input-x-expecting-x</a><br>解决办法就是把<code>IPADDRESS</code>挪到<code>HOSTNAME</code>上面就行了，原因是ANTLR生成的 parser 和 lexer 几乎是独立工作的，在不考虑内嵌动作的情况下parser不能影响lexer；lexer会简单的按照最长匹配的原则，一样长的就看grammar中出现的顺序。。。</p><p>所以之前那个文法把IP地址都匹配成了<code>HOSTNAME</code>…</p><p>问题解决，还是没好好看书，书上应该都写了的…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;觉得既然是第一次尝试ANTLR嘛，那就来个简单点的，parse Windows 的 hosts 文件吧，结果……&lt;/p&gt;
&lt;p&gt;先上一段 grammar:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
    
    
      <category term="antlr" scheme="https://blog.iseki.space/tags/antlr/"/>
    
      <category term="java" scheme="https://blog.iseki.space/tags/java/"/>
    
  </entry>
  
</feed>
